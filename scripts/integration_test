#!/bin/bash
set -eEuo pipefail
# the canonical path of this script
SELF_PATH=$(realpath -- "$0")
readonly SELF_PATH SELF_DIR=${SELF_PATH%/*}

readonly BASH_BUDDY_ROOT="$SELF_DIR/bash-buddy"
# shellcheck disable=SC1091
source "$BASH_BUDDY_ROOT/lib/trap_error_info.sh"
# shellcheck disable=SC1091
source "$BASH_BUDDY_ROOT/lib/common_utils.sh"
# shellcheck disable=SC1091
source "$BASH_BUDDY_ROOT/lib/java_utils.sh"
# shellcheck disable=SC1091
source "$BASH_BUDDY_ROOT/lib/maven_utils.sh"

################################################################################
# ci build logic
################################################################################

readonly default_build_jdk_version=21
readonly JDK_VERSIONS=(
  8
  9
  11
  17
  "$default_build_jdk_version"
  24
)

# here use `install` and `-D performRelease` intended
#   to check release operations.
#
# De-activate a maven profile from command line
#   https://stackoverflow.com/questions/25201430
#
# shellcheck disable=SC2034
readonly MVU_MVN_OPTS=(
  "${MVU_DEFAULT_MVN_OPTS[@]}"
  -DperformRelease -Dcffu.exception.log.format=short
  -P!gen-sign -P!enforce-project-version-when-release
  ${CI_MORE_MVN_OPTS:+${CI_MORE_MVN_OPTS}}
  dependency:tree
)

# cd to the project root directory
readonly PROJECT_ROOT=${SELF_DIR%/*}
cd "$PROJECT_ROOT"

########################################
# build and test by default version jdk
########################################

jvu::switch_to_jdk "$default_build_jdk_version"

cu::log_then_run scripts/gen_CffuApiCompatibilityTest.sh

cu::head_line_echo "build and test with Java $default_build_jdk_version: $JAVA_HOME"
mvu::mvn_cmd clean install -Dcffu.exception.log.format=

########################################
# test by multiple version jdks
########################################

# shellcheck disable=SC2034
readonly MVN_OPTS_FOR_JAVA8=(
  -P!default-logging-dependencies -P!default-arch-unit-test
)
# shellcheck disable=SC2034
readonly MVN_OPTS_FOR_JAVA11=(
  -DswitchToLog4j2LoggingDependencies -Pswitch-slf4j-to-v1
)
# shellcheck disable=SC2034
readonly MVN_OPTS_FOR_JAVA17=(
  -DswitchToLog4j2LoggingDependencies
)
# shellcheck disable=SC2034
readonly MVN_OPTS_FOR_JAVA24=(
  -Dcffu.exception.log.format=none
)

SUREFIRE_TEST_GOAL=(surefire:test)
# about CI env var
#   https://docs.github.com/en/actions/learn-github-actions/variables#default-environment-variables
[ "${CI:-}" = true ] && SUREFIRE_TEST_GOAL=(jacoco:prepare-agent "${SUREFIRE_TEST_GOAL[@]}" jacoco:report)
readonly SUREFIRE_TEST_GOAL

for jdk_version in "${JDK_VERSIONS[@]}"; do
  # skip default jdk, already tested above
  [ "$jdk_version" = "$default_build_jdk_version" ] && continue

  jvu::switch_to_jdk "$jdk_version"

  mvn_opts_for_java_version_var_name="MVN_OPTS_FOR_JAVA${jdk_version}[@]"

  # just test without build
  cu::head_line_echo "test with Java $jdk_version: $JAVA_HOME"
  cmd_line=(
    mvu::mvn_cmd ${!mvn_opts_for_java_version_var_name:+"${!mvn_opts_for_java_version_var_name}"}
    "${SUREFIRE_TEST_GOAL[@]}"
  )

  # test usage `ThreadPerTaskExecutor` as screen executor of `CompletableFuture`
  #   by setting `-D option java.util.concurrent.ForkJoinPool.common.parallelism=1`
  [ "$jdk_version" = 8 ] && "${cmd_line[@]}" -Djava.util.concurrent.ForkJoinPool.common.parallelism=1

  "${cmd_line[@]}"
done
